name: CI
on:
  push:
    branches: [ master, develop, release/* ]
  pull_request:
    branches: [ master, release/* ]
defaults:
  run:
    shell: bash
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: full
  RUST_TOOLCHAIN: 1.70.0
jobs:
  rustfmt:
    name: Checks / Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }} --profile minimal --component rustfmt
          rustup override set ${{ env.RUST_TOOLCHAIN }}
      - name: Format Check
        run: cargo fmt --all -- --check
  clippy:
    name: Checks / Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }} --profile minimal --component clippy
          rustup override set ${{ env.RUST_TOOLCHAIN }}
      - name: Lint Check
        run: cargo clippy --workspace --tests -- --deny warnings
  test:
    name: Tests / Build & Test
    needs: [ rustfmt, clippy ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: true
      max-parallel: 3
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }} --profile minimal
          rustup override set ${{ env.RUST_TOOLCHAIN }}
      - name: Build
        run: cargo build --workspace
      - name: Unit Testing
        run: cargo test --workspace
